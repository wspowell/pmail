// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	resources "github.com/wspowell/snailmail/resources"
)

// MailboxStore is an autogenerated mock type for the MailboxStore type
type MailboxStore struct {
	mock.Mock
}

// CreateMailbox provides a mock function with given fields: userId, attributes
func (_m *MailboxStore) CreateMailbox(userId uint32, attributes resources.MailboxAttributes) (uint32, error) {
	ret := _m.Called(userId, attributes)

	var r0 uint32
	if rf, ok := ret.Get(0).(func(uint32, resources.MailboxAttributes) uint32); ok {
		r0 = rf(userId, attributes)
	} else {
		r0 = ret.Get(0).(uint32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint32, resources.MailboxAttributes) error); ok {
		r1 = rf(userId, attributes)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindNearbyMailboxes provides a mock function with given fields: location, radius
func (_m *MailboxStore) FindNearbyMailboxes(location resources.GeoCoordinate, radius float32) error {
	ret := _m.Called(location, radius)

	var r0 error
	if rf, ok := ret.Get(0).(func(resources.GeoCoordinate, float32) error); ok {
		r0 = rf(location, radius)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetMailboxById provides a mock function with given fields: mailboxId
func (_m *MailboxStore) GetMailboxById(mailboxId uint32) (*resources.Mailbox, error) {
	ret := _m.Called(mailboxId)

	var r0 *resources.Mailbox
	if rf, ok := ret.Get(0).(func(uint32) *resources.Mailbox); ok {
		r0 = rf(mailboxId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resources.Mailbox)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint32) error); ok {
		r1 = rf(mailboxId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMailboxByUserId provides a mock function with given fields: userId
func (_m *MailboxStore) GetMailboxByUserId(userId uint32) (*resources.Mailbox, error) {
	ret := _m.Called(userId)

	var r0 *resources.Mailbox
	if rf, ok := ret.Get(0).(func(uint32) *resources.Mailbox); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resources.Mailbox)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint32) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
